definitions:
  model.AddSong:
    properties:
      group:
        type: string
      link:
        type: string
      releaseDate:
        type: string
      song:
        type: string
      text:
        type: string
    required:
    - group
    - link
    - releaseDate
    - song
    - text
    type: object
  model.Song:
    properties:
      group:
        type: string
      id:
        type: integer
      link:
        type: string
      releaseDate:
        type: string
      song:
        type: string
      text:
        type: string
    type: object
  model.SongDetails:
    properties:
      link:
        type: string
      releaseDate:
        type: string
      text:
        type: string
    type: object
  model.UpdateSongSwagger:
    properties:
      group:
        type: string
      link:
        type: string
      releaseDate:
        type: string
      song:
        type: string
    type: object
  model.VersesResponse:
    properties:
      page:
        type: integer
      per_page:
        type: integer
      song_id:
        type: integer
      verses:
        items:
          type: string
        type: array
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is an API server for working with songs
  title: song library API
  version: "1.0"
paths:
  /api/v1/songs:
    post:
      description: Add a new song to the library
      operationId: add-song
      parameters:
      - description: Song details
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/model.AddSong'
      produces:
      - application/json
      responses:
        "200":
          description: ID of the created song
          schema:
            type: integer
        "400":
          description: Incorrect fields
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Add a new song
      tags:
      - songs
  /api/v1/songs/{id}:
    delete:
      description: Delete a song from the library by ID
      operationId: delete-song
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: The song has been deleted
          schema:
            type: string
        "400":
          description: Invalid song ID or something went wrong
          schema:
            type: string
        "404":
          description: Song not found
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Delete a song
      tags:
      - songs
    put:
      description: Update the details of an existing song by ID
      operationId: update-song
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated song details
        in: body
        name: song
        required: true
        schema:
          $ref: '#/definitions/model.UpdateSongSwagger'
      produces:
      - application/json
      responses:
        "200":
          description: Updated song details
          schema:
            $ref: '#/definitions/model.Song'
        "400":
          description: Incorrect fields
          schema:
            type: string
        "404":
          description: Song not found
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Update an existing song
      tags:
      - songs
  /api/v1/songs/{id}/verses:
    get:
      description: Get verses of a specific song by ID with pagination
      operationId: get-song-verses
      parameters:
      - description: Song ID
        in: path
        name: id
        required: true
        type: integer
      - default: 0
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of verses per page
        in: query
        name: per_page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of song verses
          schema:
            items:
              $ref: '#/definitions/model.VersesResponse'
            type: array
        "400":
          description: Invalid request format
          schema:
            type: string
        "404":
          description: Song not found
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Get song verses
      tags:
      - songs
  /api/v1/songs/info:
    get:
      description: Get a list of songs by filter with pagination
      operationId: get-songs
      parameters:
      - default: 0
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Number of songs per page
        in: query
        name: per_page
        type: integer
      - description: Group name
        in: query
        name: group
        type: string
      - description: Song title
        in: query
        name: song
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of songs
          schema:
            items:
              items:
                $ref: '#/definitions/model.SongDetails'
              type: array
            type: array
        "400":
          description: Invalid request format
          schema:
            type: string
        "500":
          description: Server error
          schema:
            type: string
      summary: Get a list of songs
      tags:
      - songs
swagger: "2.0"
